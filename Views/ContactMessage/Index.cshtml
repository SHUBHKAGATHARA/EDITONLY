@model List<IceCreame_MVC.Models.ContactMessageModel>
@* For a truly functional pagination and sorting, you would typically use a PagedList object instead of a simple List. *@
@{
    ViewData["Title"] = "Contact Messages";
}

@* Add this section to your page to include the necessary JavaScript for filtering *@
@section Scripts {
    <script>
        $(document).ready(function () {
            $("#searchInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#messagesTable tbody tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
}

<div class="card shadow-lg mt-4 border-light-subtle">
    <div class="card-header bg-light">
        <div class="d-flex flex-wrap align-items-center justify-content-between gap-2">

            <h2 class="mb-0 h4">
                <i class="fas fa-envelope-open-text me-2 text-primary"></i>
                @ViewData["Title"]
                @if (Model != null && Model.Any())
                {
                    <span class="badge bg-primary rounded-pill ms-2">@Model.Count()</span>
                }
            </h2>

            <div class="d-flex flex-grow-1 flex-md-grow-0" role="toolbar">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="search" id="searchInput" class="form-control" placeholder="Search messages...">
                </div>
                <a asp-action="AddEdit" class="btn btn-success ms-2 flex-shrink-0">
                    <i class="fas fa-plus me-1"></i> Add New
                </a>
            </div>

        </div>
    </div>

    <div class="card-body p-0">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table id="messagesTable" class="table table-hover table-striped mb-0 align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Status</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Subject</th>
                            <th>Message Preview</th>
                            <th>Received At</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var msg in Model)
                        {
                            <tr>
                                <td><small class="text-muted">@msg.MessageId</small></td>
                                <td>
                                    @* You can add status logic here, e.g., a badge for read/unread *@
                                </td>
                                <td class="fw-bold">@msg.Name</td>
                                <td><a href="mailto:@msg.Email">@msg.Email</a></td>
                                <td>@msg.Subject</td>
                                <td>
                                    @{
                                        const int maxLength = 45;
                                        var messagePreview = msg.Message?.Length > maxLength
                                        ? msg.Message.Substring(0, maxLength) + "..."
                                        : msg.Message;
                                    }
                                    <span class="text-muted">@messagePreview</span>
                                </td>
                                <td>@msg.CreatedAt?.ToString("MMM dd, yyyy h:mm tt")</td>
                                <td class="text-center">
                                    <div class="btn-group" role="group" aria-label="Message Actions">
                                        <a asp-action="Details" asp-route-id="@msg.MessageId" class="btn btn-sm btn-outline-primary" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="AddEdit" asp-route-id="@msg.MessageId" class="btn btn-sm btn-outline-warning" title="Edit">
                                            <i class="fas fa-pencil-alt"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@msg.MessageId" class="btn btn-sm btn-outline-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this?')">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="card-footer bg-light d-flex justify-content-end">
                <nav aria-label="Page navigation">
                    <ul class="pagination mb-0">
                        <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item"><a class="page-link" href="#">Next</a></li>
                    </ul>
                </nav>
            </div>
        }
        else
        {
            <div class="text-center p-5 my-5">
                <i class="far fa-folder-open fa-4x text-muted mb-3"></i>
                <h3 class="text-muted">No Messages Found</h3>
                <p>There are currently no contact messages in the system.</p>
                <a asp-action="AddEdit" class="btn btn-primary mt-3">
                    <i class="fas fa-plus me-1"></i> Add the First Message
                </a>
            </div>
        }
    </div>
</div>

@* To use icons like in this example, ensure you have included Font Awesome in your _Layout.cshtml file.
    Example: <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" /> 

    To use the client-side search, you also need jQuery. It is included by default in most ASP.NET Core/MVC templates. 
*@