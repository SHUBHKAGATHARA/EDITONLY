@model List<IceCreame_MVC.Models.UserModel>

@{
    ViewData["Title"] = "User";

    // --- Helper for Role Badge Colors (UPDATED) ---
    Func<string, string> GetRoleBadgeClass = (role) =>
    {
        return role?.ToLower() switch
        {
            "admin" => "bg-danger",       // Solid red background
            "moderator" => "bg-info",       // Solid info blue background
            _ => "bg-secondary",   // Solid grey background
        };
    };

    // --- Smarter Pagination Logic ---
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    int pageRange = 2;
    int startPage = Math.Max(1, currentPage - pageRange);
    int endPage = Math.Min(totalPages, currentPage + pageRange);
}

<style>
    .user-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
    }

    .table th a {
        color: inherit;
        text-decoration: none;
    }

        .table th a:hover {
            color: #fff;
        }

    .table th .sort-icon {
        opacity: 0.6;
        transition: opacity 0.2s;
    }

    .table th a:hover .sort-icon {
        opacity: 1;
    }

    /* Responsive Table Styles (FIXED SYNTAX) */
    @@media (max-width: 768px) {
        .table-responsive-stack thead {
            display: none;
        }

        .table-responsive-stack tbody, .table-responsive-stack tr, .table-responsive-stack td {
            display: block;
            width: 100%;
        }

        .table-responsive-stack tr {
            margin-bottom: 1rem;
            border: 1px solid #dee2e6;
            border-radius: .375rem;
        }

        .table-responsive-stack td {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: .75rem;
            border: none;
        }

            .table-responsive-stack td::before {
                content: attr(data-label);
                font-weight: 500;
            }

            .table-responsive-stack td.actions-cell {
                justify-content: center;
                background-color: #f8f9fa;
            }
    }
</style>

<div class="card shadow mt-4 border-light-subtle">
    <div class="card-header bg-light">
        <div class="d-flex flex-wrap align-items-center justify-content-between gap-3">
            <h2 class="h4 mb-0 text-dark">
                <i class="bi bi-people-fill me-2 text-primary"></i>
                @ViewData["Title"]
            </h2>
            <div class="d-flex flex-grow-1 flex-md-grow-0 gap-2">
                <form asp-action="Index" method="get" class="d-flex" role="search">
                    <div class="input-group">
                        <input type="search" name="searchTerm" class="form-control" placeholder="Search users..." value="@ViewBag.SearchTerm">
                        <button class="btn btn-outline-secondary" type="submit"><i class="bi bi-search"></i></button>
                    </div>
                </form>
                <a class="btn btn-primary flex-shrink-0" asp-action="AddEdit">
                    <i class="bi bi-plus-circle me-1"></i> Add User
                </a>
            </div>
        </div>
    </div>

    <div class="card-body p-0">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover table-striped mb-0 align-middle table-responsive-stack">
                    <thead class="table-dark">
                        <tr>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.NameSortParm" asp-route-searchTerm="@ViewBag.SearchTerm">
                                    User
                                    @if (ViewData["CurrentSort"] as string == "name_desc")
                                    {
                                        <i class="bi bi-arrow-down sort-icon"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-arrow-up sort-icon"></i>
                                    }
                                </a>
                            </th>
                            <th>Role</th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateSortParm" asp-route-searchTerm="@ViewBag.SearchTerm">
                                    Created At
                                    @if (ViewData["CurrentSort"] as string == "Date")
                                    {
                                        <i class="bi bi-arrow-up sort-icon"></i>
                                    }
                                    else if (ViewData["CurrentSort"] as string == "date_desc")
                                    {
                                        <i class="bi bi-arrow-down sort-icon"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-arrow-down-up sort-icon"></i>
                                    }
                                </a>
                            </th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td data-label="User">
                                    <div class="d-flex align-items-center">
                                        <img src="https://ui-avatars.com/api/?name=@(user.UserName.Replace(" ", "+"))&background=random" class="user-avatar me-3" alt="@user.UserName">
                                        <div>
                                            <div class="fw-bold">@user.UserName</div>
                                            <div class="text-muted small">@user.Email</div>
                                        </div>
                                    </div>
                                </td>
                                <td data-label="Role"><span class="badge fs-6 @GetRoleBadgeClass(user.Role)">@user.Role</span></td>
                                <td data-label="Created At">@user.CreatedAt?.ToString("dd MMM, yyyy")</td>
                                <td data-label="Actions" class="text-center actions-cell">
                                    <div class="btn-group">
                                        <a class="btn btn-sm btn-outline-secondary" asp-action="AddEdit" asp-route-id="@user.UserId" title="Edit User">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-danger delete-btn"
                                                data-bs-toggle="modal" data-bs-target="#deleteUserModal"
                                                data-user-id="@user.UserId" data-user-name="@user.UserName" title="Delete User">
                                            <i class="bi bi-trash3-fill"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (totalPages > 1)
            {
                <div class="card-footer bg-light d-flex justify-content-center justify-content-md-end">
                    <nav aria-label="User page navigation">
                        <ul class="pagination mb-0">
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="1" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchTerm="@ViewData["SearchTerm"]">&laquo;</a>
                            </li>
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchTerm="@ViewData["SearchTerm"]">&lsaquo;</a>
                            </li>
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchTerm="@ViewData["SearchTerm"]">@i</a>
                                </li>
                            }
                            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchTerm="@ViewData["SearchTerm"]">&rsaquo;</a>
                            </li>
                            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@totalPages" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchTerm="@ViewData["SearchTerm"]">&raquo;</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
        }
        else
        {
            <div class="text-center p-5">
                <i class="bi bi-person-x-fill" style="font-size: 3rem; color: #6c757d;"></i>
                <h4 class="mt-3">No Users Found</h4>
                <p class="text-muted">
                    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                    {
                        <span>Your search for "@ViewBag.SearchTerm" did not match any users.</span>
                    }
                    else
                    {
                        <span>There are no users in the system yet.</span>
                    }
                </p>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm User Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the user <strong id="userNameToDelete"></strong>?
                <p class="text-danger small mt-2">This action is permanent and cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <form asp-action="Delete" method="post">
                    <input type="hidden" id="userIdToDelete" name="id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Confirm Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deleteModal = document.getElementById('deleteUserModal');
            if (deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const userId = button.getAttribute('data-user-id');
                    const userName = button.getAttribute('data-user-name');

                    const modalBodyName = deleteModal.querySelector('#userNameToDelete');
                    const hiddenInputId = deleteModal.querySelector('#userIdToDelete');

                    modalBodyName.textContent = userName;
                    hiddenInputId.value = userId;
                });
            }
        });
    </script>
}